plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'template.live.ashish.spark'
version '1.2-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compile "org.scala-lang:scala-library:"+scalaVersion
    compile "org.scala-lang:scala-reflect:"+scalaVersion
    compile "org.scala-lang:scala-compiler:"+scalaVersion

    compile 'org.apache.spark:spark-mllib_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-sql_'+scalaVersionShort+':'+sparkVersion
//    compile 'org.apache.spark:spark-streaming-flume-assembly_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-graphx_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-launcher_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-catalyst_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-streaming_'+scalaVersionShort+':'+sparkVersion
    compile 'org.apache.spark:spark-core_'+scalaVersionShort+':'+sparkVersion
    compile group: 'org.apache.kafka', name: 'kafka_'+scalaVersionShort, version: '2.4.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
//    compile group: 'io.prophecy', name: 'prophecy-libs_2.12', version: '6.3.0-3.3.0'
    compile "org.drools:drools-core:" + droolsVersion
    compile "org.drools:drools-compiler:" + droolsVersion
    compile "org.drools:drools-mvel:" + droolsVersion
    compile group: 'junit', name: 'junit', version: '4.13.1'
    compile 'org.projectlombok:lombok:1.18.28'
    // https://mvnrepository.com/artifact/commons-net/commons-net
    compile 'com.hierynomus:sshj:0.38.0' // For SSH download
//    Google Cloud dependencies
//    compile ('com.google.cloud.bigdataoss:gcs-connector:hadoop2-1.9.17'){
//        exclude group:"javax.jms", module:"jms"
//        exclude group:"com.sun.jdmk", module:"jmxtools"
//        exclude group:"com.sun.jmx", module:"jmxri"
//    }
//    compile 'com.google.cloud.bigdataoss:bigquery-connector:hadoop2-1.2.0'

}

task run(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

jar {
    classifier = 'all'
    manifest {
        attributes 'Implementation-Title': title,
                'Implementation-Version': version,
                'Main-Class': mainClassFile
    }
    include{sourceSets.main.output.classesDir}
    zip64 true
}

shadowJar {
    classifier = 'shadow'
    append 'reference.conf'
    dependencies {

    }
    zip64 = true
}

idea {
    module {
        // IntelliJ does not know about the standard idiom of provided as used in managing
        // uber/shaded jar dependencies. Make it so!
        scopes.PROVIDED.plus += [ configurations.provided ]
    }
}
